// invoke this test with some special arguments for the build
project.ext['liferay.gpr.publishing.force.snapshot.versions' ] = 'true'

// Apply the plugin - a local script file
apply from: "${findProperty('tested.gradle.scripts.local.src.dir')}/gpr/gpr-publishing.gradle"


task runGradleTest {
    dependsOn clean

    doLast {
        assert project.file('modules/forms/form-api/build/publications/gpr/pom-default.xml').isFile()

        // all defaults, no version set anywhere
        project.file('modules/forms/form-api/build/publications/gpr/pom-default.xml').text.with {
            assert it.contains('<groupId>com.liferay.soldesk.gpr-publishing</groupId>')
            assert it.contains('<artifactId>form-api</artifactId>')
            assert it.contains('<version>unspecified-SNAPSHOT</version>')
        }

        // version set in bnd.bnd only
        assert project.file('modules/forms/form-api-2/build/publications/gpr/pom-default.xml').isFile()

        project.file('modules/forms/form-api-2/build/publications/gpr/pom-default.xml').text.with {
            assert it.contains('<groupId>com.liferay.soldesk.gpr-publishing</groupId>')
            assert it.contains('<artifactId>form-api-2</artifactId>')
            assert it.contains('<version>1.0.2-SNAPSHOT</version>')
        }

        // version set in bnd.bnd AND build.gradle
        assert project.file('modules/forms/form-api-3/build/publications/gpr/pom-default.xml').isFile()

        project.file('modules/forms/form-api-3/build/publications/gpr/pom-default.xml').text.with {
            assert it.contains('<groupId>com.liferay.soldesk.gpr-publishing</groupId>')
            assert it.contains('<artifactId>form-api-3</artifactId>')
            assert it.contains('<version>2.1.2-SNAPSHOT</version>')
        }

        // version set in bnd.bnd + build.gradle + changed via build.gradle -> pom {}
        assert project.file('modules/forms/form-api-4/build/publications/gpr/pom-default.xml').isFile()

        project.file('modules/forms/form-api-4/build/publications/gpr/pom-default.xml').text.with {
            assert it.contains('<groupId>XXX</groupId>')
            assert it.contains('<artifactId>YYY</artifactId>')
            assert it.contains('<version>3.3.3-SNAPSHOT</version>')
            assert it.contains('<description>AAAAA</description>')
        }
    }
}

subprojects {
    afterEvaluate {
        // The publishing tasks are only added once the individual modules are configured, based on their types
        def taskToTest = tasks.findByName('generatePomFileForGprPublication')
        if (taskToTest) {
            runGradleTest.dependsOn taskToTest
        }
    }
}