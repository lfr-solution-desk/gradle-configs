// invoke this test with some special arguments for the build
project.ext['liferay.gpr.publishing.type' ] = 'SNAPSHOT'
project.ext['liferay.gpr.publishing.groupid.template' ] = 'com.liferay.soldesk.gradle-configs-gradleTest-mavenLocal'

// simulate versions/versions.gradle
subprojects {
    project.version = rootProject.version
}

// Apply the plugin - a local script file
apply from: "${findProperty('tested.gradle.scripts.local.src.dir')}/gpr/gpr-publishing.gradle"


task runGradleTest {
    dependsOn clean

    // eager cleanup during config phase
    [
            'modules/forms/form-api',
            'modules/forms/form-api-2'
    ].each {
        file("${it}/build").deleteDir()
    }

    doLast {
        assert project.file('modules/forms/form-api/build/publications/nebula/pom-default.xml').isFile()
        assert project.file('modules/forms/form-api/build/libs/com.liferay.gs.form.api-1.0.3.jar').isFile()

        // NOT generated for SNAPSHOTs
        assert project.file('modules/forms/form-api/build/libs/').listFiles().find { it.name.endsWith('-sources.jar') } == null
        assert project.file('modules/forms/form-api/build/libs/').listFiles().find { it.name.endsWith('-javadoc.jar') } == null

        assert project.file('modules/forms/form-api-2/build/publications/nebula/pom-default.xml').isFile()
        assert project.file('modules/forms/form-api-2/build/libs/com.liferay.gs.form.api-1.0.3.jar').isFile()

        // NOT generated for SNAPSHOTs
        assert project.file('modules/forms/form-api-2/build/libs/').listFiles().find { it.name.endsWith('-sources.jar') } == null
        assert project.file('modules/forms/form-api-2/build/libs/').listFiles().find { it.name.endsWith('-javadoc.jar') } == null
    }
}

allprojects {
    afterEvaluate {
        // The publishing tasks are only added once the individual modules are configured, based on their types

        def taskToTest = tasks.findByName('publishToMavenLocal')
        if (taskToTest) {
            runGradleTest.dependsOn taskToTest
        }
    }
}