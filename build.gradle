plugins {
    id 'org.ysb33r.gradletest' version '2.0' apply false
    id 'net.saliman.properties' version '1.5.1' apply false
}

subprojects {
    version = rootProject.version

    ext {
        propertiesPluginIgnoreMissingEnvFile = 'true'
        isCIBuild = (findProperty('environmentName') == 'ci')
    }

    apply plugin: 'org.ysb33r.gradletest'
    apply plugin: 'net.saliman.properties'

    repositories {
        mavenCentral()
    }

    sourceSets {
        main {
            groovy {
                srcDirs = [ 'src/gradle' ]
            }
        }
    }

    gradleTest.configure {
        // make sure all generated resources are re-built
        dependsOn 'clean'

        versions '5.6.4'    // default in the latest Liferay Workspace template

        // TODO the Liferay Workspace plugin (2.2.6) is not ready yet
        //    versions '6.3'      // testing forward

        // Required, so that we can append task output listeners and see the logger.info outout from the tested :sonarqube task
        gradleArguments "--info"

        // Pointers to the tested script plugin file
        gradleArguments "--project-prop", "tested.gradle.scripts.local.src.dir=${project.file(sourceSets.main.groovy.srcDirs.first()).absolutePath}"

        gradleArguments "--project-prop", "tested.gradle.scripts.remote.repo.url.base=https://raw.githubusercontent.com/lfr-solution-desk/gradle-configs/${rootProject.relativePath(project.projectDir)}/${project.relativePath(sourceSets.main.groovy.srcDirs.first())}"

        // Forward all project properties like "gradleTest.*" as System and projecct properties, stripping the prefix
        project.properties.findAll { it.key.startsWith('gradleTest.')}.each { k, v ->
            def systemKey = k.replaceAll(/^gradleTest\./, '')
            gradleArguments "--system-prop", "${systemKey}=${v}"
            gradleArguments "--project-prop", "${systemKey}=${v}"
        }

        beforeTest {
            println "  Running gradleTest: ${it.name}"
        }
    }
}